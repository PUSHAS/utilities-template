name: Continuous Delivery

on:
  workflow_dispatch:
    inputs:
      prNumber:
        description: The number of the PR that is being deployed
        required: true
      ref:
        description: The branch that is being deployed. Should be a branch on the given repository
        required: false
        default: main
      repository:
        description: The {owner}/{repository} that is being deployed.
        required: false
        default: PUSHAS/utilities-template
  push:
    branches:
      - main

jobs:
  Publish:
    name: Publish Next to npm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          repository: ${{ github.event.inputs.repository || 'PUSHAS/utilities-template' }}
          ref: ${{ github.event.inputs.ref || 'main' }}
      - name: Add TypeScript problem matcher
        run: echo "::add-matcher::.github/problemMatchers/tsc.json"
      - name: Use Node.js v16
        uses: actions/setup-node@v2
        with:
          node-version: 16
          registry-url: https://npm.pkg.github.com/
      - name: Restore CI Cache
        uses: actions/cache@v2.1.6
        id: cache-restore
        with:
          path: node_modules
          key: ${{ runner.os }}-16-${{ hashFiles('**/yarn.lock') }}
      - name: Install Dependencies if Cache Miss
        if: steps.cache-restore.outputs.cache-hit != 'true'
        run: yarn --immutable
      - name: Build all packages in proper order
        run: yarn build
      - name: Bump Version & Publish
        run: |
          # Resolve the tag to be used. "next" for push events, "pr-{prNumber}" for dispatch events.
          TAG=$([[ ${{ github.event_name }} == 'push' ]] && echo 'next' || echo 'pr-${{ github.event.inputs.prNumber }}')
          BRANCH=$(echo '${{ github.event.inputs.ref || 'main' }}')

          # Bump and publish
          yarn lerna publish --yes --conventional-prerelease --ignore-scripts --no-verify-access --no-git-tag-version --no-push --pre-dist-tag ${TAG} --preid "${TAG}.$(git rev-parse --verify --short HEAD)" --allow-branch ${BRANCH}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_PACKAGES_ADMIN_TOKEN }}
